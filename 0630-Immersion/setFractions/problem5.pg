##DESCRIPTION
##  Algebra problem: true or false for inequality 
##ENDDESCRIPTION

##KEYWORDS('algebra', 'inequality', 'fraction')

## DBsubject(‘Arithmetic’)
## DBchapter(‘Fractions/rational numbers’)
## DBsection(‘Dividing fractions’)
## Date('7/3/2015')
## Author('K. Andrew Parker')
## Institution('NYC City Tech')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "contextFraction.pl",
   "parserPopUp.pl",
   "scaffold.pl",
   "niceTables.pl",
   "PGessaymacros.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->flags->set(
     reduceConstants => 0,
     reduceConstantFunctions => 0,
     formatStudentAnswer=>"parsed"
   );

Context()->operators->set('*'=>{TeX=>"\times "});
Context()->operators->set(' *'=>{TeX=>"\times "});
Context()->operators->set('* '=>{TeX=>"\times "});
Context()->update;

  $formChecker = sub {
     my ($correct,$student,$ansHash) = @_; 
     my $studentstring = $ansHash->{student_formula};
     my $correctans = $ansHash->{correct_ans};
     $studentstring =~ tr/()[]//d;
     $correctans =~ tr/()[]//d;
     return ( $student==$correct && $studentstring eq $correctans ? 1 : 0);
   };

  $numChecker = sub {
     my ($correct,$student,$ansHash) = @_; 
     my $studentans=$ansHash->{original_student_ans};
     Value->Error("You're on the right track, but your answer should be just a number.") if ( ($studentans ne $student)&&($student==$correct) );
     return($studentans eq $ansHash->{correct_ans} ? 1 : 0);
  };


@prime = ( 2, 3, 5, 7, 11, 13, 17, 19, 23, 29 );

$exNum = random(2,12,2);
do{ $exDen = random(3,11,2); } until (gcf($exNum,$exDen) == 1);

$num1a = random(1,9,2);
$den1a = random(2,10,2);
$num1b = random(2,10,2);
$den1b = random(1,9,2);
$gcf1 = gcf($num1a*$num1b,$den1a*$den1b);
$num1 = $num1a*$num1b/$gcf1;
$den1 = $den1a*$den1b/$gcf1;

do {
 $p2aa = $prime[random(0,3)]; 
 $p2AA = $prime[random(0,3)];
 $num2a = $p2aa*$p2AA;
 $num2aList = List( $p2aa, $p2AA );
 $num2aTeX = "$p2aa \times $p2AA";
 $p2ab = $prime[random(0,3)];
 $p2AB = $prime[random(0,3)];
 $den2a = $p2ab*$p2AB;
 $den2aList = List( $p2ab, $p2AB );
 $den2aTeX = "$p2ab \times $p2AB";
 $p2bb = $prime[random(0,3)];
 $p2BB = $prime[random(0,3)];
 $num2b = $p2bb*$p2BB;
 $num2bList = List( $p2bb, $p2BB );
 $num2bTeX = "$p2bb \times $p2BB";
 $p2ba = $prime[random(0,3)];
 $p2BA = $prime[random(0,3)];
 $den2b = $p2ba*$p2BA;
 $den2bList = List( $p2ba, $p2BA );
 $den2bTeX = "$p2ba \times $p2BA";
 $num2 = $num2a*$num2b;
 $den2 = $den2a*$den2b;
 $gcf2 = gcf($num2,$den2);
 $gcf2List = List( "" );
 $gcfRem = $gcf2;
 foreach my $i (0..3) {
  while ( $gcfRem % $prime[$i] == 0 ) {
   $gcf2List = $gcf2List . List( Real( $prime[$i] ) );
   $gcfRem = $gcfRem / $prime[$i];
  }
 }
} until ( $gcf2List->length >= 2 && $gcf2List->length != 4 );
$num2red = $num2/$gcf2;
$den2red = $den2/$gcf2;


##############################################################
#
#  Text
#
#


Scaffold::Begin(
      can_open => "when_previous_correct",
      is_open  => "first_incorrect"
);

Section::Begin( "Part 1: Setup for Keep-Change-Flip" );

Context()->texStrings;
BEGIN_TEXT

$PAR
Dividing fractions is a little trickier than multiplying fractions, but only by a little bit.
$PAR
There's going to be one extra step. Just like we are able to turn subtraction problems into addition problems by using the keep-change-change method, we'll be able to turn division problems into multiplication ones.
$PAR
But the question is "what is the opposite of a fraction?"
$PAR
In the addition/subtraction setting, the opposite of a number meant taking the opposite sign. This is because adding the a number with the same number of opposite sign always makes zero, and zero is the additive identity (you can always add zero, and not change the number you're adding it to). 
$BR
For example, -\(5 + 5\) will be zero, and the 5's aren't important, it would have worked out the same if we'd have used any other number instead.
$PAR
$PAR
So, if we think along the same lines for the multiplication/division setting, let's start by identifying the multiplicative identity. What number can you always multiply by without changing the value you started with? \{ ans_rule(5) \}
$PAR
Now we just need to figure out how to find the "opposite" of a fraction so that when we multiply the fraction times its opposite we always end up with one.
$PAR
How can we tell if a fraction is equal to one?
$BR
Fractions are basically just division, and we end up with one whenever the numerator and denominator are the same.
$PAR
So, the easy way to get the "opposite" of a fraction is to switch the places of the numerator and denominator. Mathematicians call this $BBOLD taking the reciprocal. $EBOLD
What is the reciprocal of \( \dfrac{$exNum}{$exDen} \)? \{ ans_rule(5) \}
$BR
And what do you get if you multiply \( \dfrac{$exNum}{$exDen} \) by its reciprocal? 
\{ ans_rule(5) \}
END_TEXT
Context()->normalStrings;

ANS(Real(1)->cmp() );
ANS(Formula("$exDen/$exNum")->cmp(checker=>$formChecker) );
ANS(Real(1)->cmp() );

Section::End(); 

Section::Begin("Part 2: Dividing Fractions");

Context()->texStrings;

BEGIN_TEXT

$PAR
Now that we know how to find the "opposite" of a fraction, division of fractions will be just one step longer than multiplication of fractions:
$PAR
1.) Apply keep-change-flip. Keep the first fraction the same. Change the division to multiplication. Flip the second fraction, meaning take the reciprocal.
$BR
The rest of the steps are exactly what they were when we were multiplying fractions:
$BR
2.) Multiply the numerators.
$BR
3.) Multiply the denominators.
$BR
4.) Reduce the resulting fraction, if you can.
$PAR
That's all there is to it!
$PAR
Try it now:
$BR
Divide: \( \dfrac{$num1a}{$den1a} \div \dfrac{$den1b}{$num1b} \).
$BR
1.) Rewrite the division problem as a multiplication problem using keep-change-flip. \{ ans_rule(15) \}
$BR
2.) What is the product of the (new) numerators? \{ ans_rule(5) \}
$BR
3.) What is the product of the (new) denominators? \{ ans_rule(5) \}
$BR
4a.) To find the reduced-fraction form, first find the GCF of these two products.
\{ ans_rule(5) \}
$BR
4b.) Divide both products by the GCF that you found, and your result should a reduced fraction! \{ ans_rule(10) \}

END_TEXT
Context()->normalStrings;

ANS(Formula(" $num1a / $den1a * $num1b / $den1b ")->cmp(checker=>$formChecker) );
ANS(Real("$num1a*$num1b")->cmp(checker=>$numChecker) );
ANS(Real("$den1a*$den1b")->cmp(checker=>$numChecker) );
ANS(Real($gcf1)->cmp(checker=>$numChecker) );
ANS(Formula("$num1/$den1")->cmp(checker=>$formChecker) );
Section::End();

Section::Begin( "Part 3: Using the prime factorization method" );

Context()->texStrings;
BEGIN_TEXT

$PAR
The first method was easy, right?
$PAR
But we can make it a bit more efficient, even. Because we ultimately have to find the GCF of the numerator and denominator, we're going to have to look at the prime factorizations eventually.
$PAR
So, instead of finding the products of the numerators and denominators, we're instead going to look at their prime factorizations right away. 
$BR
(This will especially help when we need to multiply fractions with large numerators and denominators, because multiplying large numbers takes time, and then we're going to turn right around and factor them ANYWAY!)
$PAR
We'll start by just doing keep-change-flip and the factorization steps:
$BR
Divide \( \dfrac{$num2a}{$den2a} \div \dfrac{$den2b}{$num2b} \)
$PAR
1.) First, apply keep-change-flip to rewrite this division problem as multiplication:
\{ans_rule(15)\}
$BR
2a.) List the prime factors for the first numerator. \{ ans_rule(5) \}
$BR
2b.) List the prime factors for the first denominator. \{ ans_rule(5) \}
$BR
2c.) List the prime factors for the (new) second numerator. \{ ans_rule(5) \}
$BR
2d.) List the prime factors for the (new) second denominator. \{ ans_rule(5) \}
$BR

END_TEXT
Context()->normalStrings;

ANS(Formula("$num2a/$den2a*$num2b/$den2b")->cmp(checker=>$formChecker) );
ANS($num2aList->cmp(showLengthHints=>1, ordered=>0) );
ANS($den2aList->cmp(showLengthHints=>1, ordered=>0) );
ANS($num2bList->cmp(showLengthHints=>1, ordered=>0) );
ANS($den2bList->cmp(showLengthHints=>1, ordered=>0) );

Section::End();

Section::Begin( "Part 4: Finish the prime factorization method" );

Context()->texStrings;
BEGIN_TEXT

$PAR
If we now take our keep-change-flipped product, \( \dfrac{$num2a}{$den2a} \times \dfrac{$num2b}{$den2b} \), and replace each numerator and denominator with their prime factorization, we should end up with:
\[ \dfrac{$num2aTeX}{$den2aTeX} \times \dfrac{$num2bTeX}{$den2bTeX} \]
$BR
And now we're ready for the first two steps of our usual multiplying fractions process. Multiply the two numerators, and multiply the two denominators. Only this time, we're not going to even bother finding the actual value of either product:
\[ \dfrac{$num2aTeX \times $num2bTeX}{$den2aTeX \times $den2bTeX} \]
$PAR
Do you see any common prime factors in both the numerator and denominator?
$BR
List the common prime factors. Remember, don't list any number more than once unless it appears multiple times in BOTH the numerator AND denominator! \{ ans_rule(10) \}
$PAR
After we remove (divide out) the common factors from the numerator, multiply the remaining factors. \{ ans_rule(5) \}
$PAR
After we remove (divide out) the common factors from the denominator, multiply the remaining factors. \{ ans_rule(5) \}
$PAR
So, then, what's the reduced-fraction form for the original problem \( \dfrac{$num2a}{$den2a} \div \dfrac{$den2b}{$num2b} \)? \{ ans_rule(10) \}
END_TEXT
Context()->normalStrings;

ANS($gcf2List->cmp(showLengthHints=>1, ordered=>0) );
ANS(Real($num2red)->cmp(checker=>$numChecker) );
ANS(Real($den2red)->cmp(checker=>$numChecker) );
ANS(Formula("$num2red/$den2red")->cmp(checker=>$formChecker) );

Section::End();

Scaffold::End();

ENDDOCUMENT();        
