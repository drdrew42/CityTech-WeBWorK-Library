#DESCRIPTION
## Author('Andrew Parker')
## Institution('CUNY-CityTech')
#ENDDESCRIPTION

DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"contextFraction.pl",
);
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Fraction")->flags->set(
   strictFractions=>1,
   requireProperFractions=>1,
   showProperFractions =>1,
   allowMixedNumbers=>1,
   reduceConstants=>0,
);

@primes=(2,3,5,7,11);

$da0=$primes[random(0,4,1)];
$m0 = $primes[random(0,4,1)];
$db0=$da0 * $m0;
$na0=random(1,$da0-1,1);
$nb0=random(1,$db0-1,1);
$n0=$na0*$db0+$nb0*$da0;               ## REQUIRED for strictFractions
$d0=$da0*$db0;
if ($n0 >= $d0)                                        ## REQUIRED for requireProperFractions
 {
   $I0 = 0;
   while ( $n0 >= $d0 ) {
      $I0 = $I0 + 1;
      $n0 = $n0 - $d0;
   }
   $ans0 = Fraction("$I0 $n0/$d0");
 }
else
 {
   $ans0=Fraction("$n0/$d0");
 }

  
$da1=$primes[random(0,4,1)];
do { $db1=$primes[random(0,4,1)]; } until ( $da1 != $db1 );
$na1=random(1,$da1-1,1);
$nb1=random(1,$db1-1,1);
$n1=$na1*$db1+$nb1*$da1;                    ## REQUIRED FOR strictFractions=>1
$d1=$da1*$db1;
if ($n1 > $d1)
 {
   $I1 = 0;
   while ( $n1 > $d1 ) {
      $I1 = $I1 + 1;
      $n1 = $n1 - $d1;
   }
   $ans1 = Fraction("$I1 $n1/$d1");
 }
else
 {
   $ans1=Fraction("$n1/$d1");
 }

$da2=2*$primes[random(0,4,1)];
do { $db2=2*$primes[random(0,4,1)]; } until ( $da2 != $db2 );
$na2=random(1,$da2-1,2);
$nb2=random(1,$db2-1,2);
$n2=$na2*$db2+$nb2*$da2;                    ## REQUIRED FOR strictFractions=>1
$d2=$da2*$db2;
if ($n2 >= $d2)
 {
   $I2 = 0;
   while ( $n2 >= $d2 ) {
      $I2 = $I2 + 1;
      $n2 = $n2 - $d2;
   }
   $ans2 = Fraction("$I2 $n2/$d2");
 }
else
 {
   $ans2=Fraction("$n2/$d2");
 }


Context()->texStrings;
BEGIN_TEXT
$PAR
Add the following fractions. Be sure to $BBOLD reduce your answer $EBOLD and $BBOLD use mixed fraction form $EBOLD instead of improper fractions.

$PAR
\(\frac{$na0}{$da0} + \frac{$nb0}{$db0}\)=    \{ans_rule(3)\}
\{ 
knowlLink("Click for a hint", 
value=>"The denominators don't match, so you'll need to find the least common multiple of the two denominators first. (Notice that $db0 is a multiple of $da0.) What will we need to multiply $da0 in order to get $db0? - remember that we must treat also the numerator and denominator equally in order to preserve the value of the fraction. (If none of that helped, try multiplying the first fraction by $m0 in both the numerator and denominator - and notice that the resulting fraction still reduces to $na0/$da0, so that it still represents the same fraction.)") 
\}

$PAR
\(\frac{$na1}{$da1} + \frac{$nb1}{$db1}\)=    \{ans_rule(3)\}
\{ 
knowlLink("Click for a hint", 
value=>"The denominators don't match, so you'll need to find the least common multiple of $da1 and $db1 first. (You should get $d1.) Try getting a common denominator by multiplying the first fraction by $db1 in both the numerator and denominator - remember that we must treat the numerator and denominator equally in order to preserve the value of the fraction itself. Do the same with the second fraction, this time multiplying by $da1/$da1 instead of $db1/$db1.") 
\}

$PAR
\(\frac{$na2}{$da2} + \frac{$nb2}{$db2}\)=    \{ans_rule(3)\}
\{ 
knowlLink("Click for a hint", 
value=>"The denominators don't match, so you'll need to find the least common multiple of $da2 and $db2 first. (Can you find one smaller than $d2?) Remember to multiply each fraction's numerator and denominator by the same value. You'll need use different values for each fraction - but the result should be two fractions with the same denominator.") 
\}

$PAR
Remember that fractions with numerators larger than the denominator are called "improper fractions". If your answer is an improper fraction, you'll need to convert it to mixed fraction form because the instructions specifically tell you to.

$PAR
Also remember that if your final answer is not reduced - in other words, if both the numerator and denominator have a common factor - you'll need to reduce the fraction before entering it into WeBWorK. (You'll be required to reduce fractions for full credit on quizzes and tests also, so this is very important.)

END_TEXT
Context()->normalStrings;

ANS($ans0->cmp(studentsMustReduceFractions=>1));
ANS($ans1->cmp(studentsMustReduceFractions=>1));
ANS($ans2->cmp(studentsMustReduceFractions=>1));

COMMENT('MathObject version');
ENDDOCUMENT();
## DBsubject(Middle school)
## DBchapter('Fractions')
## DBsection('')