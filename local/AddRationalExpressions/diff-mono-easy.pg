########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "contextRationalFunction.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

$rationalChecker = sub {
     my ($correct,$student,$ansHash) = @_; 
     Value->Error("It looks like you've canceled too much. Your answer doesn't contain any variables.") if ($student->class ne "Formula");
     my $negated = 0;
     if ($student->{tree}->class eq "UOP" && $student->{tree}{uop} eq 'u-') {
          $student = Formula($student->{tree}->{op});
          $negated = 1;
     }
     Value->Error("Look at the preview answer box. Did you forget parenthesis around your numerator or denominator?") unless (($student->{tree}->class eq "BOP" && $student->{tree}{bop} eq "/") || $student->isConstant);
     return 0 unless ( ($correct == $student && $negated == 0) || ($correct == (-1*$student) && $negated == 1) );
     my $cnum = Formula($correct->{tree}{lop});
     my $snum = Formula($student->{tree}{lop});
     my $cden = Formula($correct->{tree}{rop});
     my $sden = Formula($student->{tree}{rop});
     Value->Error("Your answer can be reduced further") unless ( abs($cnum) == abs($snum) && abs($cden) == abs($sden) );
     return 1;
};

##############################################################
#
#  Setup
#
#
Context("Numeric")->variables->are("p"=>Real);

$d1 = list_random(2,3,5,7,11);
do { $d2 = list_random(2,3,5,7,11); } until ( $d1 != $d2 );

do { $n1 = random(3,8,1); } until ( gcf($n1,$d1) ==1 );
do { $n2 = random(3,8,1); } until ( gcf($n2,$d2) ==1 );

$frac1 = Formula("$n1/($d1*p)")->reduce;
$frac2 = Formula("$n2/($d2*p^2)")->reduce;

$nAns = Formula("$n1*$d2*p - $n2*$d1")->reduce;
$dAns = Formula("$d1*$d2*p^2")->reduce;
$ans = Formula("$nAns/$dAns");

##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT

$PAR
Subtract and reduce if possible.
$PAR
\[ $frac1 - $frac2 \]
$PAR
\{ans_rule(20)\}
END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#

ANS( $ans->cmp(checker=>$rationalChecker) );

ENDDOCUMENT();        
