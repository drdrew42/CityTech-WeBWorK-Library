########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "parserMultiAnswer.pl",
   "bizarroArithmetic.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0,tolType=>'absolute');
Context()->operators->set(
'+' => {class => 'bizarro::BOP::add', isCommand => 1},
'-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
'*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
' *' => {class => 'bizarro::BOP::multiply', isCommand => 1},
'* ' => {class => 'bizarro::BOP::multiply', isCommand => 1},
'/' => {class => 'bizarro::BOP::divide', isCommand => 1},
' /' => {class => 'bizarro::BOP::divide', isCommand => 1},
'/ ' => {class => 'bizarro::BOP::divide', isCommand => 1},
'//' => {class => 'bizarro::BOP::divide', isCommand => 1},
'**' => {class => 'bizarro::BOP::power', isCommand => 1, perl=>undef},
'^' => {class => 'bizarro::BOP::power', isCommand => 1, perl=>undef},
);

$base = random(2,6,1);
$exp = random(3,5,1);
$result = $base**$exp;

$ans = MultiAnswer(Formula("$base^($exp)"),Formula("$result"))->with(
   singleResult => 1,
   separator => " = ",
   tex_separator => " = ",
   checker => sub {
      my ($correct,$student,$self) = @_;  # get the parameters
      my ($ansHash1, $ansHash2) = @{$self->{ans}};
      my $lhs = $ansHash1->{student_formula};
      my $rhs = $ansHash2->{student_formula};
      my ($exp,$res) = @{$correct};
      return 0 if $ansHash1->{isPreview};
      $lhs = Formula("$lhs"); $rhs = Formula("$rhs"); $exp = Formula("$exp"); $res = Formula("$res");
      Value->Error("The two sides of your equation are not equal.") unless ($lhs==$rhs);
      Value::Error("Your equation does not express the same relationship as the one given in the problem.") unless (($lhs == $exp) && ($rhs == $res));
      Context()->flags->set(bizarroDiv=>1, bizarroMul=>1, bizarroAdd=>1, bizarroSub=>1, bizarroPow=>1 );
      delete $lhs->{test_values};
      delete $rhs->{test_values};
      delete $exp->{test_values};
      delete $res->{test_values};      
      Value::Error("Your equation does not contain the correct exponential form: \((base)^{power}\)") unless ( $lhs == $exp || $rhs == $exp );
      Value::Error("One side of your equation should be the result of the exponent expressed on the opposite side.") unless ($lhs == $res || $rhs == $res);
      Context()->flags->set(bizarroDiv=>0, bizarroMul=>0, bizarroAdd=>0, bizarroSub=>0, bizarroPow=>0 );
#      delete $correct->{test_values}, $student->{test_values};  
      return 1;
       },
  );

##############################################################
#
#  Text
#
#

BEGIN_PGML

Rewrite the logarithmic equation in exponential form.

>> [` \log_[$base]([$result]) = [$exp] `] <<

[________]{$ans} = [________]{$ans}

END_PGML

##############################################################
#
#  Answers
#
#

ENDDOCUMENT();        
