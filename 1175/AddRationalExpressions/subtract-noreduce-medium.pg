DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "contextLimitedPowers.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

$rationalChecker = sub {
     my ($correct,$student,$ansHash) = @_; 
     return 0 unless $correct == $student;
     if ($student->{tree}->class eq "UOP" && $student->{tree}{uop} eq 'u-') {
          $student = Formula($student->{tree}->{op});
     }
     Value->Error("Check the answer preview box. Maybe you forgot parenthesis around your numerator or denominator?") unless $student->{tree}->class eq "BOP" && $student->{tree}{bop} eq "/";
     my $cnum = Formula($correct->{tree}{lop});
     my $snum = Formula($student->{tree}{lop});
     my $cden = Formula($correct->{tree}{rop});
     my $sden = Formula($student->{tree}{rop});
     Value->Error("Your answer can be reduced further") unless (abs($cnum) == abs($snum) && abs($cden) == abs($sden));
     return 1;
};

##############################################################
#
#  Setup
#
#
Context("Numeric")->noreduce('(-x)+y', '(-x)-y');
LimitedPowers::OnlyPositiveIntegers();

$dCoeff = random(2,5,1);

$dr1 = random(3,6,1);
$dr2 = random(-6,-3,1);
$dA = $dCoeff;
$dBans = $dr1 + $dr2;
$dB = $dCoeff * $dBans;
$dCans = $dr1 * $dr2;
$dC = $dCoeff * $dCans;
$denom = Formula("$dA*x^2+$dB*x+$dC")->reduce;
$dAns = Formula("x^2+$dBans*x+$dCans")->reduce;

$nAans = non_zero_random(-6,6,2);
do{ $nA1 = random(2,8,2); } until ( $nA1 != $nAans );
$nA2 = $nA1 - $nAans;

$nBans = non_zero_random(-9,9,2);
$nB1 = non_zero_random(-8,8,1);
$nB2 = $nB1 - $nBans;

$n1 = Formula("$dCoeff * $nA1 * x + $dCoeff * $nB1")->reduce;
$n2 = Formula("$dCoeff * $nA2 * x + $dCoeff * $nB2")->reduce;
$nAns = Formula("$nAans * x + $nBans")->reduce;

$frac1 = Formula("$n1/$denom");
$frac2 = Formula("$n2/$denom");

$ans = Formula("$nAns/$dAns")->reduce;

##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT

$PAR
Combine and simplify if possible.
$PAR
\[ $frac1 - $frac2 \]
$PAR
\{ ans_rule(20) \}

END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#

ANS($ans->cmp(checker=>$rationalChecker));

ENDDOCUMENT();        
