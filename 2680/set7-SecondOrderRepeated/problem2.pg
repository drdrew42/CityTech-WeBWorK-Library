## DESCRIPTION
## Higher order ODEs: constant coefficient second order homogeneous linear ODEs
## ENDDESCRIPTION

## KEYWORDS('differential equations','second order linear ODE','constant coefficients')

## DBsubject('Differential Equations')
## DBchapter('Higher Order Differential Equations')
## DBsection('Second Order Linear')
## Date('03/04/2013')
## Author('Andrew Parker')
## Institution('NYC CityTech')
## TitleText1('Elementary DE and BVP')
## EditionText1('10th Edition')
## AuthorText1('Boyce & DiPrima')
## Section1('3.4')
## Problem1('1')


##############################
#  Initialization

DOCUMENT(); 

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"parserAssignment.pl",
);

TEXT(beginproblem());


#############################
#  Setup

Context("Numeric");
Context()->variables->{namePattern} = qr/[a-z][a-z0-9_]*'*/i;
Context()->variables->are(
A=>"Real", B=>"Real", y=>"Real", "y'"=>"Real", "y''"=>"Real", t=>"Real"
);
Context()->flags->set(
  tolType => 'absolute',
  tolerance => 0.0001,
);

# Roots for characteristic polynomial

$r1 = non_zero_random(-9,9,1);

# Coefficients for characteristic polynomial

$B = -2*$r1;
$C = $r1**2;

# Form homogeneous differential equation & solution

$de = Formula("y'' + $B*y' + $C*y")->reduce;
$hom = Formula("0");

$sol = Formula("A*e^($r1*t)+B*t*e^($r1*t)")->reduce;

# Generate coefficients for the particular solution

$a = non_zero_random(-9,9,1);
$b = non_zero_random(-9,9,1);

$part = Formula("$a*e^($r1*t)+$b*t*e^($r1*t)");

# Set initial conditions accordingly

$y0 = $a;
$Dy0 = $a*$r1 + $b;

######################
#  Main text

Context()->texStrings;
BEGIN_TEXT
(a) Find the general solution to \( $de = $hom \).
In your answer, use \( A \) and \( B \) to 
denote arbitrary constants and \( t \) 
the independent variable.
$BR
\{$sol->ans_rule\}
$BR
$BR
(b) Find the particular solution that satisfies
\( y(0) = $y0 \) and \( y'(0) = $Dy0 \).
$BR
\{$part->ans_rule\}
END_TEXT
Context()->normalStrings;


######################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS( $sol->cmp( checker => sub {
    my ( $correct, $student, $self ) = @_;
    my $stu = $student;
#    my $stu   = Formula($student->{tree}{rop});

    ################################
    #  Check for arbitrary constants
    #
    Value->Error("Is your answer the most general solution? $stu ") 
    if ( 
      Formula($stu->D('A'))==Formula("0") || 
      Formula($stu->D('B'))==Formula("0") 
    );

    ############################################
    #  Check for linear independence (Wronskian)
    #

    my $a11 = $stu->eval(A=>1,B=>0,t=>0);
    my $a12 = $stu->eval(A=>0,B=>1,t=>0);
 
    my $a21 = $stu->D('t')->eval(A=>1,B=>0,t=>0);
    my $a22 = $stu->D('t')->eval(A=>0,B=>1,t=>0);

    my $wronskian = $a11*$a22 - $a21*$a12;

    Value->Error("Your functions are not linearly independent or your answer is not complete") 
    if ($wronskian==Real(0));

    ########################################################
    #  Check that the student answer is a solution to the DE
    #
    my $Dstu  = Formula($stu->D('t'));
    my $DDstu = Formula($stu->D('t','t'));
    my $stuDE = $de->substitute("y''"=>$DDstu,"y'"=>$Dstu,y=>$stu);

    return ($stuDE==Formula("0"));

}));

ANS( $part->cmp() );

COMMENT("MathObject version.");

ENDDOCUMENT();